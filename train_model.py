import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import accuracy_score
import joblib # ููุชุจุฉ ุฃูุถู ูุญูุธ ููุงุฐุฌ scikit-learn

# --- ุงูุฎุทูุฉ 1: ุชุญููู ูุชูุธูู ุงูุจูุงูุงุช ---
try:
    # ูุฑุงุกุฉ ุจูุงูุงุช ุงูุชุฏุฑูุจ
    df_train = pd.read_csv('Training.csv')

    # ุฅุฒุงูุฉ ุฃู ูุณุงูุงุช ุฒุงุฆุฏุฉ ูู ุฃุณูุงุก ุงูุฃุนูุฏุฉ
    df_train.columns = df_train.columns.str.strip()

    # ูุตู ุงูููุฒุงุช (ุงูุฃุนุฑุงุถ) ุนู ุงููุฏู (ุงูุชุดุฎูุต)
    X = df_train.drop('prognosis', axis=1)
    y = df_train['prognosis']

    print("โ ุชู ุชุญููู ุงูุจูุงูุงุช ุจูุฌุงุญ.")
    print(f"ุนุฏุฏ ุงูุนููุงุช: {len(df_train)}, ุนุฏุฏ ุงูููุฒุงุช: {len(X.columns)}")

except FileNotFoundError:
    print("โ ุฎุทุฃ: ููู 'Training.csv' ุบูุฑ ููุฌูุฏ. ูุฑุฌู ุงูุชุฃูุฏ ูู ูุฌูุฏู ูู ููุณ ุงููุฌูุฏ.")
    exit()
except KeyError:
    print("โ ุฎุทุฃ: ูู ูุชู ุงูุนุซูุฑ ุนูู ุนููุฏ 'prognosis' ูู ููู ุงูุชุฏุฑูุจ. ูุฑุฌู ุงูุชุฃูุฏ ูู ูุฌูุฏู.")
    exit()


# --- ุงูุฎุทูุฉ 2: ุชูุณูู ุงูุจูุงูุงุช ---
# ุชูุณูู ุงูุจูุงูุงุช ุฅูู ูุฌููุนุฉ ุชุฏุฑูุจ ููุฌููุนุฉ ุงุฎุชุจุงุฑ ููุชุญูู ูู ุฏูุฉ ุงููููุฐุฌ
# 80% ููุชุฏุฑูุจุ 20% ููุงุฎุชุจุงุฑ
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)
print("โ ุชู ุชูุณูู ุงูุจูุงูุงุช ุฅูู ูุฌููุนุงุช ุชุฏุฑูุจ ูุงุฎุชุจุงุฑ.")


# --- ุงูุฎุทูุฉ 3: ุชุฏุฑูุจ ุงููููุฐุฌ ---
# ุงุณุชุฎุฏุงู ูููุฐุฌ "ุงูุบุงุจุงุช ุงูุนุดูุงุฆูุฉ" (Random Forest) ูุฃูู ููู ููุชุนุฏุฏ ุงูุงุณุชุฎุฏุงูุงุช
print("โณ ุฌุงุฑู ุชุฏุฑูุจ ูููุฐุฌ Random Forest Classifier...")
model = RandomForestClassifier(n_estimators=100, random_state=42)
model.fit(X_train, y_train)
print("โ ุชู ุงูุงูุชูุงุก ูู ุชุฏุฑูุจ ุงููููุฐุฌ.")


# --- ุงูุฎุทูุฉ 4: ุชูููู ุฃุฏุงุก ุงููููุฐุฌ ---
# ุงุฎุชุจุงุฑ ุฏูุฉ ุงููููุฐุฌ ุนูู ุจูุงูุงุช ุงูุงุฎุชุจุงุฑ ุงูุชู ูู ูุฑูุง ูู ูุจู
y_pred = model.predict(X_test)
accuracy = accuracy_score(y_test, y_pred)
print(f"๐ฏ ุฏูุฉ ุงููููุฐุฌ ุนูู ุจูุงูุงุช ุงูุงุฎุชุจุงุฑ: {accuracy * 100:.2f}%")


# --- ุงูุฎุทูุฉ 5: ุญูุธ ุงููููุฐุฌ ุงููุฏุฑุจ ---
# ุญูุธ ุงููููุฐุฌ ูู ููู ูุงุณุชุฎุฏุงูู ูุงุญูุงู ูู ุชุทุจูู ุงูููุจ
model_filename = 'trained_medical_model.joblib'
joblib.dump(model, model_filename)
print(f"๐พ ุชู ุญูุธ ุงููููุฐุฌ ุงููุฏุฑุจ ูู ููู ุจุงุณู: '{model_filename}'")

